{"version":3,"sources":["componets/FullBalance/index.js","componets/FullBalance/FullBalance.js","componets/CurrentDate/index.js","componets/CurrentDate/CurrentDate.js","componets/User/UserName.js","componets/User/UserImage.js","componets/Profile/index.js","componets/Profile/Profile.js","componets/User/UserSettings.js","componets/User/index.js","componets/User/User.js","redux/actions/userActions.js","redux/types.js","componets/Header/index.js","componets/Header/Header.js","componets/AccountCard/AccountCard.js","redux/actions/accountActions.js","componets/AccountSelect/SelectInput.js","componets/AccountSelect/index.js","componets/AccountSelect/AccountSelect.js","componets/AccountHistory/AccountHistoryTable.js","componets/AccountHistory/index.js","componets/AccountHistory/AccountHistory.js","componets/AccountInfo/index.js","componets/AccountInfo/AccountInfo.js","pages/mainPage.js","redux/actions/loginActions.js","componets/Input/index.js","componets/Input/Input.js","componets/LoginForm/LoginForm.js","pages/LoginPage.js","componets/RegistrationForm/index.js","componets/RegistrationForm/RegistrationForm.js","pages/RegistrationPage.js","App.js","redux/reducers/accountReducer.js","redux/reducers/rootReducer.js","redux/reducers/loginReducer.js","redux/reducers/userReducer.js","API/AccountAPI.js","redux/sagas/accountSaga.js","API/UserAPI.js","redux/sagas/userSaga.js","API/LoginAPI.js","redux/sagas/loginSaga.js","redux/sagas/rootSaga.js","index.js"],"names":["FullBalance","props","account","useSelector","state","balance","i","accounts","length","console","log","CurrentDate","date","format","Date","now","UserName","name","UserImage","url","divStyle","backgroundImage","className","style","Profile","user","src","img","alt","email","UserSettings","useState","modal","setModal","onClick","overlay","backgroundColor","cursor","isOpen","onRequestClose","contentLabel","ariaHideApp","User","dispatch","useDispatch","userId","login","useEffect","type","payload","userRequest","Header","text","AccountCard","id","href","accountHistorySuccess","SelectInput","options","map","value","label","onChange","select","AccountSelect","AccountHistoryTable","history","start","end","current","field","operations","filter","operation","sort","a","b","account_out_id","amount","key","operation_type","account_in_id","AccountHistory","startDate","setStartDate","endDate","setEndDate","currentAccount","dateFormat","selected","maxDate","minDate","setDate","getDate","AccountInfo","MainPage","loginSuccess","loginCheckToken","token","Input","handler","e","target","LoginForm","isLogin","useHistory","setEmail","password","setPassword","preventDefault","loginRequest","push","alert","signIn","LoginPage","to","RegistrationForm","setName","registrationRequest","signUp","RegistrationPage","App","localStorage","getItem","path","exact","initialState","fullBalance","rootReducer","combineReducers","action","jwt","AccountAPI","GetRequest","fetch","headers","Authorization","response","json","getFullBalance","_FULL_BALANCE","getAccountInfo","accountId","getAccounts","getHistory","closeAccount","loadFullBalance","loadCurrentAccount","loadMinAccounts","accountSaga","accountAPI","then","res","data","put","info","takeEvery","UserAPI","getUser","loadUser","userSaga","userAPI","error","LoginAPI","PostRequest","method","redirect","referrerPolicy","body","JSON","stringify","ok","checkToken","createUser","checkLogin","loginSaga","cookies","Cookies","loginAPI","access_token","set","setItem","remove","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67984ebb.chunk.js","sourcesContent":["import FullBalance from './FullBalance';\r\n\r\nexport default FullBalance;","import React from 'react';\r\nimport { FaRubleSign } from 'react-icons/fa';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst FullBalance = (props) => {\r\n  const account = useSelector(state => state.account);\r\n  let balance = 0;\r\n  for (let i = 0; i < account.accounts.length; i++) {\r\n    balance += account.accounts[i].balance;\r\n  }\r\n  console.log(balance);\r\n  return <>{balance} <FaRubleSign /></>;\r\n};\r\n\r\nexport default FullBalance;","import CurrentDate from './CurrentDate';\r\n\r\nexport default CurrentDate;","import React from 'react';\r\nimport { format } from 'date-fns';\r\n\r\nconst CurrentDate = () => {\r\n  let date = format(Date.now(), 'dd/MM/yyyy');\r\n  return <>{date}</>;\r\n};\r\n\r\nexport default CurrentDate;","import React from 'react';\r\n\r\nconst UserName = ({ name }) => {\r\n  return <>{name}</>;\r\n};\r\n\r\nexport default UserName;","import React from 'react';\r\nimport { FaUserCircle } from 'react-icons/fa';\r\n\r\nconst UserImage = ({ url }) => {\r\n  const divStyle = {\r\n    backgroundImage: `url(${url})`,\r\n  };\r\n  return (\r\n    <>\r\n      {(url)\r\n        ? <div className=\"user__image\" style={divStyle} />\r\n        : <FaUserCircle className=\"icon\" />\r\n      }\r\n    </>\r\n  );\r\n};\r\nexport default UserImage;","import Profile from './Profile';\n\nexport default Profile;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './Profile.css';\n\nconst Profile = () => {\n  const user = useSelector(state => state.user);\n\n  return (\n    <div className=\"profile\">\n      <h1>Настройка профиля</h1>\n      <img src={user.img} alt=\"Здесь могло быть ваше фото\" />\n      <h2>{user.name}</h2>\n      <h2>{user.email}</h2>\n      <h2>Статус???</h2>\n      <div className=\"profile__buttons\">\n        <button className=\"btn bg_green profile__btn\">Изменить профиль</button>\n        <button className=\"btn bg_green profile__btn\">Изменить пароль</button>\n        <button className=\"btn bg_red profile__btn\">удалить аккаунт</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","import { MdSettings } from 'react-icons/md';\r\nimport Modal from 'react-modal';\r\nimport React, { useState } from 'react';\r\nimport Profile from '../Profile';\r\n\r\nconst UserSettings = () => {\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModal(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"user__icon-btn\" onClick={openModal}><MdSettings />\r\n      </div>\r\n      <Modal\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: 'rgba(37,60,119,0.92)',\r\n            cursor: 'pointer',\r\n          },\r\n        }}\r\n        className=\"user__modal\"\r\n        isOpen={modal}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Example Modal\"\r\n        ariaHideApp={false}>\r\n        <Profile/>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserSettings;","import User from './User';\r\n\r\nexport default User;","import React, { useEffect } from 'react';\r\nimport UserName from './UserName';\r\nimport './User.css';\r\nimport UserImage from './UserImage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userRequest } from '../../redux/actions/userActions';\r\nimport UserSettings from './UserSettings';\r\n\r\nconst User = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector(state => state.login.userId);\r\n  const user = useSelector(state => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(userRequest(userId));\r\n  }, [dispatch, userId]);\r\n\r\n\r\n  return (\r\n    <div className=\"user\">\r\n      <UserName name={user.name} />\r\n      <UserSettings />\r\n      <UserImage url={user.img} />\r\n    </div>);\r\n};\r\n\r\nexport default User;","import { USER_LOAD_SUCCESS, USER_REQUEST } from '../types';\r\n\r\nexport const userRequest = (userId) => {\r\n  return {\r\n    type: USER_REQUEST,\r\n    payload: { userId },\r\n  };\r\n};\r\n\r\nexport const userLoadSuccess = (payload) => {\r\n  return {\r\n    type: USER_LOAD_SUCCESS,\r\n    payload,\r\n  };\r\n};","//LOGIN\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGIN_CHECK_TOKEN = 'LOGIN_CHECK_TOKEN';\r\nexport const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST';\r\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\r\n//USER\r\nexport const USER_REQUEST = 'USER_REQUEST';\r\nexport const USER_LOAD_SUCCESS = 'USER_LOAD_SUCCESS';\r\n//ACCOUNT//\r\nexport const ACCOUNT_FULL_BALANCE_REQUEST = 'ACCOUNT_FULL_BALANCE_REQUEST';\r\nexport const ACCOUNT_FULL_BALANCE_SUCCESS = 'ACCOUNT_FULL_BALANCE_SUCCESS';\r\nexport const ACCOUNT_SET_CURRENT = 'ACCOUNT_SET_CURRENT';\r\nexport const ACCOUNT_CURRENT_SUCCESS = 'ACCOUNT_CURRENT_SUCCESS';\r\nexport const ACCOUNT_MIN_REQUEST = 'ACCOUNT_MIN_REQUEST';\r\nexport const ACCOUNT_MIN_SUCCESS = 'ACCOUNT_MIN_SUCCESS';\r\nexport const ACCOUNT_HISTORY_SUCCESS = 'ACCOUNT_HISTORY_SUCCESS';\r\n","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Header.css';\r\nimport FullBalance from '../FullBalance';\r\nimport CurrentDate from '../CurrentDate';\r\nimport { FaRegCalendarAlt } from 'react-icons/fa';\r\nimport User from '../User';\r\n\r\nconst Header = () => {\r\n  return <div className=\"header\">\r\n    <div className=\"header__item\"><FullBalance text=\"24000\" /></div>\r\n    <div className=\"header__item\"><FaRegCalendarAlt /> {' '}<CurrentDate /></div>\r\n    <div className=\"header__item\"><User /></div>\r\n  </div>;\r\n};\r\n\r\nexport default Header;","import React from 'react';\nimport './AccountCard.css';\nimport { FaRubleSign } from 'react-icons/fa';\n\nconst AccountCard = ({ account }) => {\n  //TODO: Обработчики конпок\n  return (\n    <div className=\"account__card\">\n      <div className=\"account__number\">Счёт: {account.id}</div>\n      <div className=\"account__balance\">{account.balance}<FaRubleSign /></div>\n      <div className=\"account__buttons\">\n        <button className=\"account__replenish btn bg_green\">Пополнить</button>\n        <button className=\"account__transfer btn bg_green\">Перевод</button>\n        <button className=\"account__payment btn bg_green\">Платёж</button>\n      </div>\n      <div className=\"account__other\">\n        <div className=\"account__links\">\n          <a href=\"#1\"> Выписка </a>\n          <a href=\"#2\"> Создать шаблон </a>\n        </div>\n        <button className=\"btn bg_red\">Закрыть счёт</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountCard;","import {\n  ACCOUNT_CURRENT_SUCCESS,\n  ACCOUNT_FULL_BALANCE_REQUEST,\n  ACCOUNT_FULL_BALANCE_SUCCESS,\n  ACCOUNT_HISTORY_SUCCESS,\n  ACCOUNT_MIN_REQUEST,\n  ACCOUNT_MIN_SUCCESS,\n  ACCOUNT_SET_CURRENT,\n} from '../types';\n\nexport const fullBalanceRequest = () => {\n  return {\n    type: ACCOUNT_FULL_BALANCE_REQUEST,\n  };\n};\nexport const fullBalanceSuccess = (payload) => {\n  return {\n    type: ACCOUNT_FULL_BALANCE_SUCCESS,\n    payload,\n  };\n};\nexport const setCurrentAccount = (id) => {\n  return {\n    type: ACCOUNT_SET_CURRENT,\n    payload: id,\n  };\n};\n\nexport const currentAccountSuccess = (payload) => {\n  return {\n    type: ACCOUNT_CURRENT_SUCCESS,\n    payload,\n  };\n};\n\nexport const accountsMinRequest = () => {\n  return {\n    type: ACCOUNT_MIN_REQUEST,\n  };\n};\n\nexport const accountsMinSuccess = (payload) => {\n  return {\n    type: ACCOUNT_MIN_SUCCESS,\n    payload,\n  };\n};\n\nexport const accountHistorySuccess = (payload) => {\n  return {\n    type: ACCOUNT_HISTORY_SUCCESS,\n    payload: payload,\n  };\n};","import { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport { setCurrentAccount } from '../../redux/actions/accountActions';\nimport React from 'react';\nimport { FaRubleSign } from 'react-icons/fa';\n\n\nconst SelectInput = () => {\n  const dispatch = useDispatch();\n  const accounts = useSelector(state => state.account.accounts);\n  console.log(accounts);\n  const options = accounts.map((account) => {\n    return {\n      value: account.id,\n      label: account.id,\n    };\n  });\n\n  return <div className=\"account__select\">\n    <h1>выбор счёта</h1>\n    <Select\n      onChange={(select) => {\n        dispatch(setCurrentAccount(select.value));\n      }}\n      options={options}\n    />\n  </div>;\n};\n\nexport default SelectInput;","import AccountSelect from './AccountSelect';\n\nexport default AccountSelect;","import React, { useEffect } from 'react';\nimport SelectInput from './SelectInput';\nimport { useDispatch } from 'react-redux';\nimport { accountsMinRequest } from '../../redux/actions/accountActions';\n\nimport './AccountSelect.css';\n\nconst AccountSelect = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(accountsMinRequest());\n  }, [dispatch]);\n\n//TODO: 0 и 1 счёт\n\n  return <div className=\"account__select\">\n\n    <SelectInput />\n    <hr className=\"separate\" />\n    <button className=\"btn bg_orange\">Открыть счёт</button>\n  </div>;\n};\n\nexport default AccountSelect;","import React from 'react';\nimport { format } from 'date-fns';\n\nfunction byField(field) {\n  return (a, b) => a[field] < b[field] ? 1 : -1;\n}\n\nconst AccountHistoryTable = ({ history, start, end, current }) => {\n    console.log(current);\n\n    const filterHistory = history.filter(operation => {\n      const date = new Date(operation.date);\n      if (start && end) {\n        return date > start && date < end;\n      } else if (start) {\n        return date > start;\n      } else if (end) {\n        return date < end;\n      }\n      return true;\n    }).sort(byField('date'));\n\n\n    const operations = filterHistory.map(operation => {\n      if (operation.account_out_id === current) {\n        operation.amount = -operation.amount;\n      }\n      let date = format(new Date(operation.date), 'dd/MM/yyyy, hh:mm:ss');\n      return (\n        <tr key={operation.date}>\n          <td>{date}</td>\n          <td>{operation.operation_type}</td>\n          <td>{operation.account_in_id}</td>\n          <td>{operation.account_out_id}</td>\n          <td>{operation.amount}</td>\n        </tr>);\n    });\n\n    return <div className=\"account__table\">\n      <table>\n        <thead>\n        <tr>\n          <td>Дата</td>\n          <td>Тип</td>\n          <td>Получатель</td>\n          <td>Отправитель</td>\n          <td>Сумма</td>\n        </tr>\n        </thead>\n        <tbody>\n        {operations}\n        </tbody>\n      </table>\n    </div>;\n  }\n;\n\nexport default AccountHistoryTable;","import AccountHistory from './AccountHistory';\n\nexport default AccountHistory;","import React, { useState } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker/es';\n\nimport './AccountHistory.css';\nimport AccountHistoryTable from './AccountHistoryTable';\nimport { useSelector } from 'react-redux';\n\nconst AccountHistory = () => {\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const history = useSelector(state => state.account.history);\n  const current = useSelector(state => state.account.currentAccount.id);\n  console.log(current);\n  const date = new Date();\n  return (\n    <div className=\"account__history\">\n      <h1>История операций по счёту</h1>\n      <span>C\n        <DatePicker\n          dateFormat=\"dd/MM/yyyy\"\n          className=\"account__date\"\n          selected={startDate}\n          maxDate={new Date()}\n          onChange={(date) => setStartDate(date)}\n        />\n        по\n        <DatePicker\n          dateFormat=\"dd/MM/yyyy, HH:mm\"\n          className=\"account__date\"\n          selected={endDate}\n          minDate={startDate}\n          maxDate={date.setDate(date.getDate() + 1)}\n          onChange={(date) => setEndDate(date)}\n        />\n      </span>\n      <AccountHistoryTable history={history} start={startDate} end={endDate} current={current} />\n    </div>\n  );\n};\n\nexport default AccountHistory;","import AccountInfo from './AccountInfo';\n\nexport default AccountInfo;","import React from 'react';\n\nimport './AccountInfo.css';\nimport AccountCard from '../AccountCard/AccountCard';\nimport AccountSelect from '../AccountSelect';\nimport { useSelector } from 'react-redux';\nimport AccountHistory from '../AccountHistory';\n\nconst AccountInfo = () => {\n  const account = useSelector(state => state.account.currentAccount);\n  return (\n    <div className=\"account\">\n      {account\n        ?\n        <>\n          <AccountCard account={account} />\n          <AccountHistory />\n        </>\n        :\n        <h2>Выберите счёт</h2>}\n      <AccountSelect />\n\n    </div>\n  );\n};\n\nexport default AccountInfo;","import React from 'react';\r\nimport Header from '../componets/Header';\r\nimport AccountInfo from '../componets/AccountInfo';\r\n\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <AccountInfo />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;","import {\r\n  LOGIN_CHECK_TOKEN,\r\n  LOGIN_ERROR,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  REGISTRATION_REQUEST,\r\n} from '../types';\r\n\r\nexport const loginRequest = (email, password) => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n    payload: {\r\n      email,\r\n      password,\r\n    },\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (id) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport const loginCheckToken = (token) => {\r\n  return {\r\n    type: LOGIN_CHECK_TOKEN,\r\n    payload: { token },\r\n  };\r\n};\r\n\r\nexport const loginError = () => {\r\n  return {\r\n    type: LOGIN_ERROR,\r\n  };\r\n};\r\n\r\nexport const registrationRequest = (email, name, password) => {\r\n  return {\r\n    type: REGISTRATION_REQUEST,\r\n    payload: {\r\n      email,\r\n      name,\r\n      password,\r\n    },\r\n  };\r\n};","import Input from './Input';\n\nexport default Input;","import React from 'react';\nimport './Input.css';\n\nconst Input = ({ label, value, handler, type }) => {\n  return <>\n    <label className=\"label\">{label}:</label>\n    <input className=\"input\"\n      type={type}\n      value={value}\n      onChange={(e) => handler(e.target.value)} /></>;\n};\n\nexport default Input;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { loginRequest } from '../../redux/actions/loginActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './LoginForm.css';\nimport Input from '../Input';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(state => state.login.isLogin);\n  let history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const signIn = (e) => {\n    e.preventDefault();\n    dispatch(loginRequest(email, password));\n    if (isLogin) {\n      history.push('/');\n    } else {\n      alert('Введён неверный Email или Пароль');\n    }\n  };\n\n  return (\n    <form className=\"form\">\n      <h1 className=\"form__header\">Войдите в систему</h1>\n      <Input type=\"email\" label=\"Email\" value={email} handler={setEmail} />\n      <Input type=\"password\" label=\"Пароль\" value={password} handler={setPassword} />\n      <button className=\"btn bg_green form__btn\" onClick={(e) => signIn(e)}>войти</button>\n    </form>\n  );\n};\n\nexport default LoginForm;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport LoginForm from '../componets/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const login = useSelector(state => state.login);\n\n\n  return (\n    <>\n      {login.isLogin ? <Redirect to=\"/\" /> :\n        <div className=\"form-overlay\">\n          <LoginForm />\n          <Link to=\"/registration\">\n            <button className=\"form__link btn bg_orange\">Регистрация</button>\n          </Link>\n        </div>\n      }\n\n    </>\n  );\n};\n\nexport default LoginPage;","import RegistrationForm from './RegistrationForm';\n\nexport default RegistrationForm;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { registrationRequest } from '../../redux/actions/loginActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Input from '../Input';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(state => state.login.isLogin);\n  let history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const signUp = (e) => {\n    e.preventDefault();\n    dispatch(registrationRequest(email, name, password));\n    if (isLogin) {\n      history.push('/');\n    }\n  };\n\n  return (\n    <form className=\"form\">\n      <h1 className=\"form__header\">Регистрация</h1>\n      <Input label=\"Имя\" value={name} handler={setName} />\n      <Input type=\"email\" label=\"Email\" value={email} handler={setEmail} />\n      <Input type=\"password\" label=\"Пароль\" value={password} handler={setPassword} />\n      <button className=\"btn bg_green form__btn\"\n        onClick={(e) => signUp(e)}>Зарегестрироваться\n      </button>\n    </form>\n  );\n};\n\nexport default RegistrationForm;","import React from 'react';\nimport RegistrationForm from '../componets/RegistrationForm';\nimport { Link } from 'react-router-dom';\n\n\nconst RegistrationPage = () => {\n  return (\n    <div className=\"form-overlay\">\n      <RegistrationForm />\n      <Link to=\"/login\">\n        <button className=\"form__link btn bg_orange\">Вход</button>\n      </Link>\n    </div>\n\n  );\n};\n\nexport default RegistrationPage;","import React from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MainPage from './pages/mainPage';\nimport { Redirect, Route } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport RegistrationPage from './pages/RegistrationPage';\nimport { loginCheckToken } from './redux/actions/loginActions';\n\n\nfunction App() {\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const token = localStorage.getItem('jwt');\n  if (token && !login.isLogin) {\n    dispatch(loginCheckToken(token));\n  }\n\n  return (\n    <div className=\"content\">\n      <Route path=\"/\" exact>\n        {(login.isLogin) ? <MainPage /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route path=\"/login\"><LoginPage /></Route>\n      <Route path=\"/registration\"><RegistrationPage /></Route>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  ACCOUNT_CURRENT_SUCCESS,\n  ACCOUNT_FULL_BALANCE_SUCCESS,\n  ACCOUNT_HISTORY_SUCCESS,\n  ACCOUNT_MIN_SUCCESS,\n} from '../types';\n\nconst initialState = {\n  fullBalance: 0,\n  currentAccount: null,\n  accounts: [],\n  history: [],\n};\n\nexport const accountReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACCOUNT_FULL_BALANCE_SUCCESS:\n      return {\n        ...state,\n        fullBalance: action.payload,\n      };\n    case ACCOUNT_CURRENT_SUCCESS:\n      return {\n        ...state,\n        currentAccount: action.payload,\n      };\n    case ACCOUNT_MIN_SUCCESS:\n      console.log(action.payload);\n      return {\n        ...state,\n        accounts: action.payload,\n      };\n    case ACCOUNT_HISTORY_SUCCESS:\n      return {\n        ...state,\n        history: action.payload,\n      };\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\r\nimport { loginReducer } from './loginReducer';\r\nimport { userReducer } from './userReducer';\r\nimport { accountReducer } from './accountReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  login: loginReducer,\r\n  user: userReducer,\r\n  account: accountReducer,\r\n});\r\n\r\n","import { LOGIN_ERROR, LOGIN_SUCCESS } from '../types';\r\n\r\nexport const loginReducer = (state = {\r\n\r\n  isLogin: false,\r\n  userId: null,\r\n}, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLogin: true,\r\n        userId: action.payload.id,\r\n        jwt: 'token',\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        isLogin: false,\r\n        userId: null,\r\n        jwt: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { USER_LOAD_SUCCESS } from '../types';\r\n\r\n\r\nexport const userReducer = (state = {\r\n  id: null,\r\n  name: null,\r\n  img: null,\r\n}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOAD_SUCCESS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};","export default class AccountAPI {\n\n  GetRequest = async (url) => {\n    const response = await fetch(url, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      },\n    });\n    return response.json();\n  };\n\n  getFullBalance = async () => {\n    //----ЗАГЛУШКА----\n    return _FULL_BALANCE;\n  };\n  getAccountInfo = async (accountId) => {\n\n    return await this.GetRequest(`http://localhost:51870/api/accounts/${accountId}`);\n  };\n  getAccounts = async () => {\n    return await this.GetRequest('http://localhost:51870/api/accounts');\n  };\n  getHistory = async (accountId) => {\n    return await this.GetRequest(`http://localhost:51870/api/accounts/${accountId}/operations`);\n  };\n\n  closeAccount = async () => {\n    console.log('--API: Закрыть текущий счёт');\n  };\n}\n\n\nconst _FULL_BALANCE = 24000;\n","import { put, takeEvery } from 'redux-saga/effects';\nimport {\n  ACCOUNT_FULL_BALANCE_REQUEST, ACCOUNT_MIN_REQUEST, ACCOUNT_SET_CURRENT,\n} from '../types';\nimport AccountAPI from '../../API/AccountAPI';\nimport {\n  accountHistorySuccess, accountsMinSuccess,\n  currentAccountSuccess,\n  fullBalanceSuccess,\n} from '../actions/accountActions';\n\n\nfunction* loadFullBalance() {\n  try {\n    const accountAPI = new AccountAPI();\n    const data = yield accountAPI.getFullBalance().then(res => res);\n    yield put(fullBalanceSuccess(data));\n  } catch (e) {\n\n  }\n}\n\nfunction* loadCurrentAccount(action) {\n  console.log(action);\n  const accountAPI = new AccountAPI();\n  const info = yield  accountAPI.getAccountInfo(action.payload).then(res => res);\n  yield put(currentAccountSuccess(info));\n  const history = yield  accountAPI.getHistory(action.payload).then(res => res);\n  yield put(accountHistorySuccess(history));\n}\n\nfunction* loadMinAccounts() {\n  const accountAPI = new AccountAPI();\n  const data = yield  accountAPI.getAccounts().then(res => res);\n\n  yield  put(accountsMinSuccess(data));\n}\n\nfunction* accountSaga() {\n  yield takeEvery(ACCOUNT_FULL_BALANCE_REQUEST, loadFullBalance);\n  yield takeEvery(ACCOUNT_SET_CURRENT, loadCurrentAccount);\n  yield takeEvery(ACCOUNT_MIN_REQUEST, loadMinAccounts);\n}\n\nexport default accountSaga;","export default class UserAPI {\r\n  GetRequest = async (url) => {\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`,\r\n      },\r\n    });\r\n    return response.json();\r\n  };\r\n\r\n  getUser = async (id) => {\r\n    return await this.GetRequest('http://localhost:51870/api/users/current');\r\n  };\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { USER_REQUEST } from '../types';\nimport UserAPI from '../../API/UserAPI';\nimport { userLoadSuccess } from '../actions/userActions';\n\nfunction* loadUser(action) {\n  try {\n    if (action.payload.userId) {\n      const userAPI = new UserAPI();\n      const data = yield userAPI.getUser(action.payload.userId).then(res => res);\n      yield put(userLoadSuccess(data));\n    }\n  } catch (e) {\n    console.error('ошибка при загрузки пользователя');\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery(USER_REQUEST, loadUser);\n}\n\nexport default userSaga;","export default class LoginAPI {\n\n  PostRequest = async (url, data) => {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(data),\n    });\n    return response.json();\n  };\n\n  GetRequest = async (url) => {\n    const response = await fetch(url, {\n      method: 'Get',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      },\n    });\n    if (response.ok) {\n      return response;\n    } else {\n      return null;\n    }\n  };\n\n  checkToken = async () => {\n    const result = await this.GetRequest('http://localhost:51870/api/auth/checktoken');\n    if (result) {\n      return 'token is valid';\n    } else {\n      return null;\n    }\n  };\n\n  login = async (email, password) => {\n    const token = await this.PostRequest(\n      'http://localhost:51870/api/auth',\n      {\n        email,\n        password,\n      });\n    return token;\n  };\n  createUser = async ({ name, email, password }) => {\n    const res = await this.PostRequest(\n      'http://localhost:51870/api/users',\n      {\n        name,\n        email,\n        password,\n      },\n    );\n    console.log(res);\n    return res.json();\n  };\n}","import { put, takeEvery } from 'redux-saga/effects';\nimport {\n  LOGIN_CHECK_TOKEN,\n  LOGIN_REQUEST, REGISTRATION_REQUEST,\n\n} from '../types';\n\nimport { loginCheckToken, loginError, loginSuccess } from '../actions/loginActions';\n\nimport LoginAPI from '../../API/LoginAPI';\n\nimport Cookies from 'universal-cookie/es6';\n\nconst cookies = new Cookies();\n\nfunction* checkLogin(action) {\n  const { email, password } = action.payload;\n  const loginAPI = new LoginAPI();\n  const response = yield loginAPI.login(email, password);\n  if (response.access_token) {\n    cookies.set('jwt', response.access_token);\n    localStorage.setItem('jwt', response.access_token);\n    yield put(loginCheckToken());\n  }\n}\n\nfunction* checkToken() {\n  const loginAPI = new LoginAPI();\n  const id = yield loginAPI.checkToken();\n  if (id) {\n    yield put(loginSuccess(id));\n  } else {\n    cookies.remove('jwt', { path: '/' });\n    yield put(loginError());\n  }\n}\n\nfunction* createUser(action) {\n  const loginAPI = new LoginAPI();\n  yield loginAPI.createUser(action.payload);\n  //TODO: \n\n}\n\nfunction* loginSaga() {\n  yield takeEvery(LOGIN_REQUEST, checkLogin);\n  yield takeEvery(LOGIN_CHECK_TOKEN, checkToken);\n  yield takeEvery(REGISTRATION_REQUEST, createUser);\n}\n\nexport default loginSaga;","import accountSaga from './accountSaga';\nimport userSaga from './userSaga';\nimport loginSaga from './loginSaga';\nimport { all } from 'redux-saga/effects';\n\n\nexport default function* rootSaga() {\n  yield all([\n    accountSaga(),\n    userSaga(),\n    loginSaga(),\n  ]);\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { rootReducer } from './redux/reducers/rootReducer';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport rootSaga from './redux/sagas/rootSaga';\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst devTools = process.env.NODE_ENV === 'development'\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n  : null;\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}